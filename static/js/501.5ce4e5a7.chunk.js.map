{"version":3,"file":"static/js/501.5ce4e5a7.chunk.js","mappings":"8LAgDA,UAvCmB,SAAC,GAA2B,IAA1BA,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,SACvBC,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA6DC,EAAAA,EAAAA,KAAtDC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,YAE/CC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,CAACZ,IAEJ,IAAMY,EAAa,WAEjB,OADAF,IACQX,GACN,IAAK,QACHS,EAASR,GAAIa,KAAKC,GAClB,MACF,IAAK,YACHL,EAAaT,GAAIa,KAAKC,GAG3B,EAEKA,EAAe,SAACX,GACpBC,EAAQD,EACT,EAEKY,EAAeR,GAAQ,SAAC,IAAD,IAAkB,KACzCS,EAAUV,GAAU,SAAC,IAAD,IAAa,KACjCW,EAAYX,GAAWC,IAAUJ,EAAmC,MAA3B,SAACL,EAAD,CAAWK,KAAMA,IAEhE,OACE,iCACE,SAAC,IAAD,IACCY,EACAC,EACAC,IAGN,C","sources":["components/pages/SinglePage.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport AppBanner from '../appBanner/AppBanner';\n\n\nconst SinglePage = ({Component, dataType}) => {\n  const {id} = useParams();\n  const [data, setData] = useState(null);\n  const {loading, error, getComic, getCharacter, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateData();\n  }, [id]);\n\n  const updateData = () => {\n    clearError();\n    switch (dataType) {\n      case 'comic':\n        getComic(id).then(onDataLoaded);\n        break;\n      case 'character':\n        getCharacter(id).then(onDataLoaded);\n    }\n\n  }\n\n  const onDataLoaded = (data) => {\n    setData(data);\n  }\n\n  const errorMessage = error ? <ErrorMessage/> : null;\n  const spinner = loading ? <Spinner/> : null;\n  const content = !(loading || error || !data) ? <Component data={data}/> : null;\n\n  return (\n    <>\n      <AppBanner/>\n      {errorMessage}\n      {spinner}\n      {content}\n    </>\n  )\n}\n\nexport default SinglePage\n"],"names":["Component","dataType","id","useParams","useState","data","setData","useMarvelService","loading","error","getComic","getCharacter","clearError","useEffect","updateData","then","onDataLoaded","errorMessage","spinner","content"],"sourceRoot":""}